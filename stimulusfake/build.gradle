
buildscript {
    //ext - build.gradle에서 전역변수를 설정하겠다는 의미 / springBootVersion 이게 변수
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 위에서 선언한 플러그인 의존성을 적용할 것인지를 결정하는 코드
plugins {
    id 'java'
    id 'eclipse'
}

apply plugin : 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//스프링 부트의 의존성들을 관리 해주는 플러그인. 꼭 필요

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

// 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을 지를 결정
repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'junit:junit:4.12'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    /*
     'spring-boot-starter-data-jpa' : 스프링부트용 Spring Data Jpa 추상화 라이브러리
                                    : 스프링부트 버전에 맞춰 자동으로 Jpa 관련 라이브러리들의 버전을 관리
     h2 : 인메모리의 관계형 데이터 베이스
            별도의 설치가 필요 없이 프로젝트 의존성만으로 관리 가능
            메모리에서 실행되기 때문에 애플리케이션을 재시작 할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용됨
            여기서는 JPA의 테스트, 로컬 환경에서의구동에서 사용할 예정.
     */
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.session:spring-session-jdbc')
//    org.springframework.session:spring-session-jdbc : 데이터베이스를 session 저장소로 사용하기 위해

    testImplementation('org.springframework.security:spring-security-test')
}

//test {
//    useJUnitPlatform()
//}

